name: Rust CI

on:
  workflow_call: {}
  pull_request: {}
  push:
    branches: [ "main" ]


env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable, beta]

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        ini-values: error_reporting=E_ALL
        tools: composer:v2
        coverage: none
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
    
    # - name: Check formatting
    #   run: cargo fmt --all -- --check
    
    # - name: Check lints
    #   run: cargo clippy -- -D warnings

    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose
    - name: cargo install cargo-php --locked
      run: cargo install cargo-php --locked || true
    - name: cargo php install
      run: |
        extension_dir=$(php -r "echo ini_get('extension_dir');")
        sudo mkdir -p $extension_dir
        sudo cp target/debug/libfsrs_rs_php.so $extension_dir/libfsrs_rs_php.so
        echo "extension=libfsrs_rs_php.so" >> $(php -r "echo php_ini_loaded_file();")


    - name: php -m
      run: php -m
    - name: php examples/sample.php
      run: php examples/sample.php
